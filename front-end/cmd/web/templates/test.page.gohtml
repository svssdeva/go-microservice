{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <a id="brokerBtn" class="btn btn-primary" href="javascript:void(0)">Broker</a>

                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        let broker = document.getElementById('brokerBtn');
        let payload = document.getElementById('payload');
        let received = document.getElementById('received');
        let output = document.getElementById('output');

        broker.addEventListener('click', () => {
            const body = { method: 'POST'}
            fetch("http:\/\/localhost:8080", body)
                .then(response => response.json())
                .then(data => {
                    payload.innerHTML = "empty post";
                    received.innerHTML = JSON.stringify(data, undefined, 4);
                    if (data.error) {
                        output.innerHTML = data.error;
                    } else {
                        output.innerHTML += `<br><strong>Success! Response from broker service</strong> : ${data.message}`;
                    }
                }).catch(error => {
                    console.error('Error:', error);
                });
        });

        payload.addEventListener('input', () => {
            payload.innerHTML = payload.value;
        });

        received.addEventListener('input', () => {
            received.innerHTML = received.value;
        });

        payload.addEventListener('input', () => {
            payload.innerHTML = payload.value;
        });

        received.addEventListener('input', () => {
            received.innerHTML = received.value;
        });
    </script>
{{end}}
